/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SafeERC20Namer } from "../SafeERC20Namer";

export class SafeERC20Namer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SafeERC20Namer> {
    return super.deploy(overrides || {}) as Promise<SafeERC20Namer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeERC20Namer {
    return super.attach(address) as SafeERC20Namer;
  }
  connect(signer: Signer): SafeERC20Namer__factory {
    return super.connect(signer) as SafeERC20Namer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20Namer {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20Namer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6107d8610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063033b9b4f14610045578063e54f7522146100ed575b600080fd5b6100786004803603602081101561005b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610120565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100b257818101518382015260200161009a565b50505050905090810190601f1680156100df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100786004803603602081101561010357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610172565b60608061014d837f95d89b41000000000000000000000000000000000000000000000000000000006101b4565b905080516000141561016a5761016283610437565b91505061016d565b90505b919050565b60608061019f837f06fdde03000000000000000000000000000000000000000000000000000000006101b4565b905080516000141561016a5761016283610444565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000851617815291518151606093600093859373ffffffffffffffffffffffffffffffffffffffff891693919290918291908083835b6020831061027857805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161023b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146102d8576040519150601f19603f3d011682016040523d82523d6000602084013e6102dd565b606091505b50915091508115806102ee57508051155b1561030c576040518060200160405280600081525092505050610431565b80516020141561034457600081806020019051602081101561032d57600080fd5b5051905061033a81610451565b9350505050610431565b60408151111561041c5780806020019051602081101561036357600080fd5b810190808051604051939291908464010000000082111561038357600080fd5b90830190602082018581111561039857600080fd5b82516401000000008111828201881017156103b257600080fd5b82525081516020918201929091019080838360005b838110156103df5781810151838201526020016103c7565b50505050905090810190601f16801561040c5780820380516001836020036101000a031916815260200191505b5060405250505092505050610431565b60405180602001604052806000815250925050505b92915050565b606061016a8260066105c0565b606061016a8260286105c0565b6040805160208082528183019092526060918291906020820181803683370190505090506000805b602081101561050a57600085826020811061049057fe5b1a60f81b90507fff0000000000000000000000000000000000000000000000000000000000000081161561050157808484815181106104cb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001909201915b50600101610479565b5060608167ffffffffffffffff8111801561052457600080fd5b506040519080825280601f01601f19166020018201604052801561054f576020820181803683370190505b50905060005b828110156105b75783818151811061056957fe5b602001015160f81c60f81b82828151811061058057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610555565b50949350505050565b6060600282061580156105d35750600082115b80156105e0575060288211155b61064b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604482015290519081900360640190fd5b60608267ffffffffffffffff8111801561066457600080fd5b506040519080825280601f01601f19166020018201604052801561068f576020820181803683370190505b50905073ffffffffffffffffffffffffffffffffffffffff841660005b6002850481101561077057600860138290030282901c600f600482901c1660f0821682036106d98261077a565b8685600202815181106106e857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506107208161077a565b86856002026001018151811061073257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535050600190920191506106ac9050565b5090949350505050565b6000600a8260ff16101561079557506030810160f81b61016d565b506037810160f81b61016d56fea2646970667358221220e517f7b247170d40657cea90f10bc2b76ac140f7c9f57224e1e25c8a7608c05464736f6c63430007050033";
